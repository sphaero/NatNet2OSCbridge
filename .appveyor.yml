version: 1.0.{build}

environment:
  global:
    APPVEYOR_OS_NAME: windows
    CHERE_INVOKING: 1
    MSYS2_PATH: c:\msys64
  matrix:
  #MSYS2 Building
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      platform: x86
      BUILDER: MSYS2
      MSYSTEM: MINGW32

  #VisualStudio Building
  #  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  #    platform: x86
  #    BUILDER : VS
  #    BITS: 32
  #  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  #    platform: x64
  #    BUILDER : VS
  #    BITS: 64

configuration: Debug
clone_depth: 100

init:
# fix for https://github.com/appveyor/ci/issues/2571
- del C:\Windows\System32\libssl-*.dll C:\Windows\system32\libcrypto-*.dll
- del C:\Windows\SysWOW64\libssl-*.dll C:\Windows\SysWOW64\libcrypto-*.dll
# Upgrade the MSYS2 system
- '%MSYS2_PATH%\usr\bin\bash -lc "pacman --noconfirm -Syu"'
# Upgrade all packages if running with MSYS2
- if "%BUILDER%"=="MSYS2" (%MSYS2_PATH%\usr\bin\bash -lc "pacman --noconfirm -Su")
- '%MSYS2_PATH%\usr\bin\bash -lc "pacman --noconfirm -Su --needed unzip rsync libopenssl mingw-w64-i686-openssl mingw-w64-i686-ntldd-git"'
- if "%BUILDER%"=="VS" set PATH=%ProgramFiles(x86)%\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin;%PATH%
# downgrade make
#- '%MSYS2_PATH%\usr\bin\bash -lc "pacman --noconfirm -S make=4.2.1-4"'
- '%MSYS2_PATH%\usr\bin\bash -lc "wget http://repo.msys2.org/mingw/x86_64/mingw-w64-x86_64-make-4.2.1-4-any.pkg.tar.xz && pacman --noconfirm -U mingw-w64-x86_64-make-4.2.1-4-any.pkg.tar.xz"'
- '%MSYS2_PATH%\usr\bin\bash -lc "wget http://repo.msys2.org/mingw/i686/mingw-w64-i686-make-4.2.1-4-any.pkg.tar.xz && pacman --noconfirm -U mingw-w64-i686-make-4.2.1-4-any.pkg.tar.xz"'
- '%MSYS2_PATH%\usr\bin\bash -lc "wget http://repo.msys2.org/msys/x86_64/make-4.2.1-1-x86_64.pkg.tar.xz && pacman --noconfirm -U make-4.2.1-1-x86_64.pkg.tar.xz"'

install:
- git submodule update --init --recursive
- cd ..
- git clone --depth=1 --branch=master https://github.com/openframeworks/openFrameworks
- mkdir openFrameworks\apps\myapps
- move %APPVEYOR_PROJECT_SLUG% openFrameworks\apps\myapps\%APPVEYOR_PROJECT_NAME%
- cd openFrameworks
- if "%BUILDER%"=="MSYS2" %MSYS2_PATH%\usr\bin\bash -lc "scripts/msys2/install_dependencies.sh --noconfirm"
- if "%BUILDER%"=="MSYS2" %MSYS2_PATH%\usr\bin\bash -lc "scripts/msys2/download_libs.sh --silent"
- cd addons
- git clone --depth=1 --branch=173stdlib https://github.com/sphaero/ofxImGui.git
- git clone --depth=1 https://github.com/hku-ect/ofxNatNet.git
- git clone --depth=1 https://github.com/danomatika/ofxMidi.git
- git clone --depth=1 --branch=msys2 --recursive https://github.com/sphaero/ofxOpenVRTracker.git
- cd ..\apps\myapps\%APPVEYOR_PROJECT_NAME%

build_script:
- '%MSYS2_PATH%\usr\bin\bash -lc "make python_win && rm bin/libcrypto*.dll bin/libssl*.dll"'
- if "%BUILDER%"=="MSYS2" %MSYS2_PATH%\usr\bin\bash -lc "make Debug && make copy_dlls"
# workaround for OpenVR dll
- '%MSYS2_PATH%\usr\bin\bash -lc "cp ../../../addons/ofxOpenVRTracker/libs/OpenVR/bin/win32/openvr_api.dll bin/"'
- if "%BUILDER%"=="VS" echo "BOE"

after_build:
# windows batch sucks :S this gets git describe info into a var
- git fetch --all --tags
- git describe --tag --always --dirty --abbrev=4 > gitversion.txt
- set /p GITVERSION=<gitversion.txt
- del gitversion.txt
- cd bin
- 7z a -r %APPVEYOR_BUILD_FOLDER%\%APPVEYOR_PROJECT_NAME%_win_%APPVEYOR_REPO_BRANCH%_%GITVERSION%.zip *.*
- dir

deploy:
  - provider: FTP
    protocol: sftp
    host: pong.hku.nl
    username: buildbot
    password:
      secure: sX82pi7zNN1f0L6eYSqOQA==
    folder: public_html/nightly/
    artifact: buildzip 
  - provider: GitHub
    release: NatNet2OSCbridge_win_$(appveyor_build_version)
    description: 'Release version'
    auth_token:
      secure: 9ko98o5TER6nN6gtko/ZkCEnfWeMSaRpSe6AXIdBJ6+UdWFI9TRBPrw8y+x6/IuX
    artifact: buildzip
    draft: true
    prerelease: true
    on:
      branch: master                 # release from master branch only
      APPVEYOR_REPO_TAG: true        # deploy on tag push only

artifacts:
  - path: '*.zip'
    name: buildzip
